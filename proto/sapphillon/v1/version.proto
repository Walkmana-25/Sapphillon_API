// Copyright 2025 Yuta Takahashi
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

syntax = "proto3";

package sapphillon.v1;

// Provides read-only application version information.
// The service returns semantic version strings for display and compatibility checks.
service VersionService {
  // Returns the current application version.
  //
  // Behavior:
  // - Unary RPC.
  // - Guaranteed to be fast and side-effect free.
  // - Suitable for health checks or compatibility gating.
  //
  // Errors:
  // - Typically none; may return INTERNAL if the version cannot be determined.
  rpc GetVersion(GetVersionRequest) returns (GetVersionResponse);
}

// Represents application version information.
// The version string typically follows Semantic Versioning.
message Version {
  // The version of the application.
  // Format: "vMAJOR.MINOR.PATCH" with optional pre-release or build metadata
  // (e.g., "v1.2.3", "v1.2.3-alpha-1", "v1.2.3-beta.1").
  string version = 1;
}

// Request for GetVersion.
// This message is intentionally empty to allow future extensibility without breaking changes.
message GetVersionRequest {}

// Response for GetVersion.
message GetVersionResponse {
  // The current application version.
  Version version = 1;
}
